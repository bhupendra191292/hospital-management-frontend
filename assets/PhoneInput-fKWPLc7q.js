var k=Object.defineProperty;var B=(t,e,n)=>e in t?k(t,e,{enumerable:!0,configurable:!0,writable:!0,value:n}):t[e]=n;var I=(t,e,n)=>B(t,typeof e!="symbol"?e+"":e,n);import{r as j,j as r}from"./index-CWlqgBx2.js";const O={US:{name:"US",validate:t=>/^\d{10}$/.test(t),format:t=>{const e=t.replace(/\D/g,"");return e.length===10?`${e.slice(0,3)}-${e.slice(3,6)}-${e.slice(6)}`:e},maxLength:10,pattern:/^\d{10}$/},International:{name:"International",validate:t=>/^\d{10,15}$/.test(t),format:t=>{const e=t.replace(/\D/g,"");return e.length===11&&e.startsWith("1")?`+1 ${e.slice(1,4)}-${e.slice(4,7)}-${e.slice(7)}`:e.length===10?`${e.slice(0,3)}-${e.slice(3,6)}-${e.slice(6)}`:e},maxLength:15,pattern:/^\d{10,15}$/},Flexible:{name:"Flexible",validate:t=>/^\d{7,15}$/.test(t),format:t=>t.replace(/\D/g,""),maxLength:15,pattern:/^\d{7,15}$/}};class x{static registerStrategy(e,n){this.validators.set(e,n)}static getStrategy(e){const n=this.validators.get(e);if(!n)throw new Error(`Phone validation strategy '${e}' not found`);return n}static getAvailableStrategies(){return Array.from(this.validators.keys())}}I(x,"validators",new Map);Object.entries(O).forEach(([t,e])=>{x.registerStrategy(t,e)});const V=t=>/^\d*$/.test(t),W=(t,e,n={})=>{const{maxLength:o=15,strategy:c="US",allowFormatting:l=!1}=n;if(!V(t))return;const a=x.getStrategy(c),d=Math.min(o,a.maxLength);if(t.length<=d)if(l&&t.length===a.maxLength){const h=a.format(t);e(h)}else e(t)},q={US:t=>/^\d{10}$/.test(t),International:t=>/^\d{10,15}$/.test(t),Flexible:t=>/^\d{7,15}$/.test(t)},z=j.memo(j.forwardRef(({value:t,onChange:e,placeholder:n="Phone number (numbers only)",name:o="phone",className:c="form-input",required:l=!1,maxLength:a=15,id:d,validationStrategy:h="US",validationFn:G=W,formatFn:y,error:i,helperText:g,disabled:m=!1,readOnly:v=!1,autoComplete:N="tel",onBlur:p,onFocus:w,onKeyDown:L,"aria-label":P,"aria-describedby":F,"aria-invalid":U,...E},M)=>{const C=u=>{if(m||v)return;const s=u.target.value;/^\d*$/.test(s)&&s.length<=a&&e(s)},D=u=>{if(y&&t){const s=y(t);e(s)}p==null||p(u)},f=!!(i||U),A=`${c} ${f?"error":""} ${m?"disabled":""}`.trim(),$=d||`field-${o}`,b=i?`${$}-error`:void 0,S=g?`${$}-helper`:void 0,R=[F,b,S].filter(Boolean).join(" ")||void 0;return r.jsxs("div",{className:"phone-input-container",children:[r.jsx("input",{ref:M,type:"tel",name:o,id:$,className:A,placeholder:n,value:t,onChange:C,onBlur:D,onFocus:w,onKeyDown:L,required:l,disabled:m,readOnly:v,pattern:"[0-9]*",inputMode:"numeric",maxLength:a,autoComplete:N,"aria-label":P||n,"aria-describedby":R,"aria-invalid":f,"aria-required":l,...E}),i&&r.jsx("div",{className:"phone-input-message error",id:b,children:i}),g&&!i&&r.jsx("div",{className:"phone-input-message helper",id:S,children:g}),t&&!f&&r.jsx("div",{className:"phone-input-validation","aria-hidden":"true",children:q[h](t)?"✅":"⚠️"})]})}));z.displayName="PhoneInput";export{z as P};
